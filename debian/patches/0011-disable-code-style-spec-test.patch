From: Sean Whitton <spwhitton@spwhitton.name>
Date: Fri, 13 May 2016 14:13:11 -0700
Subject: disable code style spec test

It relies on `git ls-files' and the source package must be buildable
outside of git.
---
 test/specs/test-code-style.el | 58 +++++++++++++++++++++----------------------
 1 file changed, 29 insertions(+), 29 deletions(-)

--- a/test/specs/test-code-style.el
+++ b/test/specs/test-code-style.el
@@ -57,34 +57,34 @@
                                   (not (string-match-p (rx "test/resources/") fn))))
                 sources)))
 
-(describe "Code style"
-  (dolist (source (flycheck/find-all-elisp-files))
-    (describe (format "File %s" (file-relative-name source))
-      (before-each
-        (assume (version<= "25" emacs-version) "Our style must match Emacs 25"))
+;; (describe "Code style"
+;;   (dolist (source (flycheck/find-all-elisp-files))
+;;     (describe (format "File %s" (file-relative-name source))
+;;       (before-each
+;;         (assume (version<= "25" emacs-version) "Our style must match Emacs 25"))
 
-      (it "has proper documentation format"
-        (expect (flycheck/checkstyle source)
-                :to-equal ""))
+;;       (it "has proper documentation format"
+;;         (expect (flycheck/checkstyle source)
+;;                 :to-equal ""))
 
-      ;; Don't test the test init file because loading it has it has
-      ;; side-effects, and we need to load files in order to figure out their
-      ;; indentation rules.
-      (unless (equal (file-relative-name source) "test/init.el")
-        (it "is properly indented"
-          (with-temp-buffer
-            (insert-file-contents source)
-            (set-buffer-modified-p nil)
-            ;; Enable `emacs-lisp-mode' to bring indentation rules and syntax
-            ;; table in, but ignore all mode hooks
-            (delay-mode-hooks (emacs-lisp-mode))
-            (setq delayed-mode-hooks nil)
-            ;; Load the library to make local definitions available
-            (load source 'noerror 'nomessage 'nosuffix)
-            ;; Now re-indent.  If it's modified afters, indentation wasn't
-            ;; right.
-            (let ((inhibit-message t))  ; `indent-region' is chatty, silence it
-              (indent-region (point-min) (point-max)))
-            (expect (buffer-modified-p) :not :to-be-truthy)))))))
+;;       ;; Don't test the test init file because loading it has it has
+;;       ;; side-effects, and we need to load files in order to figure out their
+;;       ;; indentation rules.
+;;       (unless (equal (file-relative-name source) "test/init.el")
+;;         (it "is properly indented"
+;;           (with-temp-buffer
+;;             (insert-file-contents source)
+;;             (set-buffer-modified-p nil)
+;;             ;; Enable `emacs-lisp-mode' to bring indentation rules and syntax
+;;             ;; table in, but ignore all mode hooks
+;;             (delay-mode-hooks (emacs-lisp-mode))
+;;             (setq delayed-mode-hooks nil)
+;;             ;; Load the library to make local definitions available
+;;             (load source 'noerror 'nomessage 'nosuffix)
+;;             ;; Now re-indent.  If it's modified afters, indentation wasn't
+;;             ;; right.
+;;             (let ((inhibit-message t))  ; `indent-region' is chatty, silence it
+;;               (indent-region (point-min) (point-max)))
+;;             (expect (buffer-modified-p) :not :to-be-truthy)))))))
 
 ;;; test-code-style.el ends here
