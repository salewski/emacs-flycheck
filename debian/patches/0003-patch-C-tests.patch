From: Sean Whitton <spwhitton@spwhitton.name>
Date: Fri, 26 Feb 2016 21:45:21 -0700
Subject: patch-C++-tests

---
 test/flycheck-test.el | 396 +++++++++++++++++++++++++-------------------------
 1 file changed, 198 insertions(+), 198 deletions(-)

diff --git a/test/flycheck-test.el b/test/flycheck-test.el
index 0db6c1b..b79bc39 100644
--- a/test/flycheck-test.el
+++ b/test/flycheck-test.el
@@ -2411,448 +2411,448 @@ evaluating BODY."
 (ert-deftest flycheck-next-error/goes-to-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (flycheck-next-error)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (flycheck-next-error)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-next-error/goes-to-next-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (flycheck-next-error)
-    (flycheck-next-error)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (flycheck-next-error)
+                                 (flycheck-next-error)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-next-error/errors-beyond-last-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (goto-char (point-max))
-    (let ((err (should-error (flycheck-next-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (goto-char (point-max))
+                                 (let ((err (should-error (flycheck-next-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/errors-when-moving-too-far ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (let ((err (should-error (flycheck-next-error 4) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (let ((err (should-error (flycheck-next-error 4) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/navigate-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (flycheck-next-error 2)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (flycheck-next-error 2)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-next-error/navigate-back-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (goto-char (point-max))
-    (flycheck-next-error -2)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-next-error -2)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-next-error/reset-navigates-to-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (goto-char (point-max))
-    (flycheck-next-error 1 'reset)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-next-error 1 'reset)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-next-error/does-not-cross-narrowing ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (re-search-forward "(defun .*")
-    (narrow-to-defun)
-    (goto-char (point-min))
-    (flycheck-next-error)
-    (should (flycheck-ert-at-nth-error 1))
-    (let ((err (should-error (flycheck-next-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (re-search-forward "(defun .*")
+                                 (narrow-to-defun)
+                                 (goto-char (point-min))
+                                 (flycheck-next-error)
+                                 (should (flycheck-ert-at-nth-error 1))
+                                 (let ((err (should-error (flycheck-next-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-previous-error/errors-before-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (let ((err (should-error (flycheck-previous-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (let ((err (should-error (flycheck-previous-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-previous-error/goes-to-last-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (goto-char (point-max))
-    (flycheck-previous-error)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (goto-char (point-max))
+                                 (flycheck-previous-error)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-previous-error/navigate-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (goto-char (point-max))
-    (flycheck-previous-error 2)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-previous-error 2)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-previous-error/navigate-back-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (flycheck-previous-error -2)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (flycheck-previous-error -2)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-previous-error/errors-when-moving-too-far ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (goto-char (point-max))
-    (let ((err (should-error (flycheck-previous-error 4) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (goto-char (point-max))
+                                 (let ((err (should-error (flycheck-previous-error 4) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-first-error/goes-to-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (goto-char (point-max))
-    (flycheck-first-error)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-first-error)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-first-error/stays-at-first-error-if-called-again ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (goto-char (point-max))
-    (flycheck-first-error)
-    (flycheck-first-error)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-first-error)
+                                 (flycheck-first-error)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-first-error/goes-to-second-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer nil
-    (goto-char (point-max))
-    (flycheck-first-error 2)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (goto-char (point-max))
+                                 (flycheck-first-error 2)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-next-error/over-errors/goes-to-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (flycheck-next-error)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (flycheck-next-error)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-next-error/over-errors/goes-to-next-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (flycheck-next-error)
-    (let ((err (should-error (flycheck-next-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (flycheck-next-error)
+                                 (let ((err (should-error (flycheck-next-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/over-errors/errors-beyond-last-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (goto-char (point-max))
-    (let ((err (should-error (flycheck-next-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (goto-char (point-max))
+                                 (let ((err (should-error (flycheck-next-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/over-errors/errors-when-moving-too-far ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (let ((err (should-error (flycheck-next-error 4) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (let ((err (should-error (flycheck-next-error 4) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/over-errors/navigate-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (let ((err (should-error (flycheck-next-error 2) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (let ((err (should-error (flycheck-next-error 2) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/over-errors/navigate-back-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (goto-char (point-max))
-    (let ((err (should-error (flycheck-next-error -2) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (goto-char (point-max))
+                                 (let ((err (should-error (flycheck-next-error -2) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/over-errors/reset-navigates-to-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (goto-char (point-max))
-    (flycheck-next-error 1 'reset)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (goto-char (point-max))
+                                 (flycheck-next-error 1 'reset)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-next-error/over-errors/does-not-cross-narrowing ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (re-search-forward "(defun .*")
-    (narrow-to-defun)
-    (goto-char (point-min))
-    (let ((err (should-error (flycheck-next-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (re-search-forward "(defun .*")
+                                 (narrow-to-defun)
+                                 (goto-char (point-min))
+                                 (let ((err (should-error (flycheck-next-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-previous-error/over-errors/errors-before-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (let ((err (should-error (flycheck-previous-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (let ((err (should-error (flycheck-previous-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-previous-error/over-errors/goes-to-last-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (goto-char (point-max))
-    (flycheck-previous-error)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (goto-char (point-max))
+                                 (flycheck-previous-error)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-previous-error/over-errors/navigate-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (goto-char (point-max))
-    (let ((err (should-error (flycheck-previous-error -2) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (goto-char (point-max))
+                                 (let ((err (should-error (flycheck-previous-error -2) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-previous-error/over-errors/navigate-back-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (let ((err (should-error (flycheck-previous-error -2) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (let ((err (should-error (flycheck-previous-error -2) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-previous-error/over-errors/errors-when-moving-too-far ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (goto-char (point-max))
-    (let ((err (should-error (flycheck-previous-error 4) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (goto-char (point-max))
+                                 (let ((err (should-error (flycheck-previous-error 4) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-first-error/over-errors/goes-to-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (goto-char (point-max))
-    (flycheck-first-error)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (goto-char (point-max))
+                                 (flycheck-first-error)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-first-error/over-errors/stays-at-first-error-if-called-again ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (goto-char (point-max))
-    (flycheck-first-error)
-    (flycheck-first-error)
-    (should (flycheck-ert-at-nth-error 2)))) ; second occurrence is an 'error
+                                 (goto-char (point-max))
+                                 (flycheck-first-error)
+                                 (flycheck-first-error)
+                                 (should (flycheck-ert-at-nth-error 2)))) ; second occurrence is an 'error
 
 (ert-deftest flycheck-first-error/over-errors/goes-to-second-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'error
-    (goto-char (point-max))
-    (let ((err (should-error (flycheck-first-error 2) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (goto-char (point-max))
+                                 (let ((err (should-error (flycheck-first-error 2) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/over-warnings/goes-to-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (flycheck-next-error)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (flycheck-next-error)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-next-error/over-warnings/goes-to-next-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (flycheck-next-error)
-    (flycheck-next-error)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (flycheck-next-error)
+                                 (flycheck-next-error)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-next-error/over-warnings/errors-beyond-last-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (goto-char (point-max))
-    (let ((err (should-error (flycheck-next-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (goto-char (point-max))
+                                 (let ((err (should-error (flycheck-next-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/over-warnings/errors-when-moving-too-far ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (let ((err (should-error (flycheck-next-error 4) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (let ((err (should-error (flycheck-next-error 4) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/over-warnings/navigate-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (let ((err (should-error (flycheck-next-error 4) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (let ((err (should-error (flycheck-next-error 4) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/over-warnings/navigate-back-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (goto-char (point-max))
-    (flycheck-next-error -2)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-next-error -2)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-next-error/over-warnings/reset-navigates-to-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (goto-char (point-max))
-    (flycheck-next-error 1 'reset)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-next-error 1 'reset)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-next-error/over-warnings/does-not-cross-narrowing ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (re-search-forward "(defun .*")
-    (narrow-to-defun)
-    (goto-char (point-min))
-    (flycheck-next-error)
-    (should (flycheck-ert-at-nth-error 1))
-    (let ((err (should-error (flycheck-next-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (re-search-forward "(defun .*")
+                                 (narrow-to-defun)
+                                 (goto-char (point-min))
+                                 (flycheck-next-error)
+                                 (should (flycheck-ert-at-nth-error 1))
+                                 (let ((err (should-error (flycheck-next-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-previous-error/over-warnings/errors-before-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (let ((err (should-error (flycheck-previous-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (let ((err (should-error (flycheck-previous-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-previous-error/over-warnings/goes-to-last-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (goto-char (point-max))
-    (flycheck-previous-error)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (goto-char (point-max))
+                                 (flycheck-previous-error)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-previous-error/over-warnings/navigate-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (goto-char (point-max))
-    (flycheck-previous-error 2)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-previous-error 2)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-previous-error/over-warnings/navigate-back-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (flycheck-previous-error -2)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (flycheck-previous-error -2)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-previous-error/over-warnings/errors-when-moving-too-far ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (goto-char (point-max))
-    (let ((err (should-error (flycheck-previous-error 4) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (goto-char (point-max))
+                                 (let ((err (should-error (flycheck-previous-error 4) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-first-error/over-warnings/goes-to-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (goto-char (point-max))
-    (flycheck-first-error)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-first-error)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-first-error/over-warnings/stays-at-first-error-if-called-again ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (goto-char (point-max))
-    (flycheck-first-error)
-    (flycheck-first-error)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-first-error)
+                                 (flycheck-first-error)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-first-error/over-warnings/goes-to-second-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'warning
-    (goto-char (point-max))
-    (flycheck-first-error 2)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (goto-char (point-max))
+                                 (flycheck-first-error 2)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-next-error/over-informational/goes-to-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (flycheck-next-error)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (flycheck-next-error)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-next-error/over-informational/goes-to-next-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (flycheck-next-error)
-    (flycheck-next-error)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (flycheck-next-error)
+                                 (flycheck-next-error)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-next-error/over-informational/errors-beyond-last-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (goto-char (point-max))
-    (let ((err (should-error (flycheck-next-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (goto-char (point-max))
+                                 (let ((err (should-error (flycheck-next-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/over-informational/errors-when-moving-too-far ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (let ((err (should-error (flycheck-next-error 4) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (let ((err (should-error (flycheck-next-error 4) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-next-error/over-informational/navigate-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (flycheck-next-error 2)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (flycheck-next-error 2)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-next-error/over-informational/navigate-back-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (goto-char (point-max))
-    (flycheck-next-error -2)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-next-error -2)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-next-error/over-informational/reset-navigates-to-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (goto-char (point-max))
-    (flycheck-next-error 1 'reset)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-next-error 1 'reset)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-next-error/over-informational/does-not-cross-narrowing ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (re-search-forward "(defun .*")
-    (narrow-to-defun)
-    (goto-char (point-min))
-    (flycheck-next-error)
-    (should (flycheck-ert-at-nth-error 1))
-    (let ((err (should-error (flycheck-next-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (re-search-forward "(defun .*")
+                                 (narrow-to-defun)
+                                 (goto-char (point-min))
+                                 (flycheck-next-error)
+                                 (should (flycheck-ert-at-nth-error 1))
+                                 (let ((err (should-error (flycheck-next-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-previous-error/over-informational/errors-before-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (let ((err (should-error (flycheck-previous-error) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (let ((err (should-error (flycheck-previous-error) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-previous-error/over-informational/goes-to-last-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (goto-char (point-max))
-    (flycheck-previous-error)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (goto-char (point-max))
+                                 (flycheck-previous-error)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-previous-error/over-informational/navigate-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (goto-char (point-max))
-    (flycheck-previous-error 2)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-previous-error 2)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-previous-error/over-informational/navigate-back-by-two-errors ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (flycheck-previous-error -2)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (flycheck-previous-error -2)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 (ert-deftest flycheck-previous-error/over-informational/errors-when-moving-too-far ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (goto-char (point-max))
-    (let ((err (should-error (flycheck-previous-error 4) :type 'user-error)))
-      (should (string= (cadr err) "No more Flycheck errors")))))
+                                 (goto-char (point-max))
+                                 (let ((err (should-error (flycheck-previous-error 4) :type 'user-error)))
+                                   (should (string= (cadr err) "No more Flycheck errors")))))
 
 (ert-deftest flycheck-first-error/over-informational/goes-to-first-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (goto-char (point-max))
-    (flycheck-first-error)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-first-error)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-first-error/over-informational/stays-at-first-error-if-called-again ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (goto-char (point-max))
-    (flycheck-first-error)
-    (flycheck-first-error)
-    (should (flycheck-ert-at-nth-error 1))))
+                                 (goto-char (point-max))
+                                 (flycheck-first-error)
+                                 (flycheck-first-error)
+                                 (should (flycheck-ert-at-nth-error 1))))
 
 (ert-deftest flycheck-first-error/over-informational/goes-to-second-error ()
   :tags '(navigation)
   (flycheck-test-with-nav-buffer 'info
-    (goto-char (point-max))
-    (flycheck-first-error 2)
-    (should (flycheck-ert-at-nth-error 2))))
+                                 (goto-char (point-max))
+                                 (flycheck-first-error 2)
+                                 (should (flycheck-ert-at-nth-error 2))))
 
 
 ;;; Listing errors in buffers
@@ -3039,9 +3039,9 @@ evaluating BODY."
   (let ((err (flycheck-error-new-at 10 20 'warning "This is a Flycheck error."))
         (flycheck-display-errors-function nil))
     (shut-up
-      ;; Without an error function, error display should be a no-op.
-      (flycheck-display-errors (list err))
-      (should (equal (shut-up-current-output) "")))))
+     ;; Without an error function, error display should be a no-op.
+     (flycheck-display-errors (list err))
+     (should (equal (shut-up-current-output) "")))))
 
 (ert-deftest flycheck-display-errors/custom-function ()
   :tags '(error-display)
@@ -3061,9 +3061,9 @@ evaluating BODY."
                                     "This is a Flycheck error."
                                     :id "spam")))
     (shut-up
-      (flycheck-display-error-messages (list err))
-      (should (equal (shut-up-current-output)
-                     "This is a Flycheck error. [spam]\n")))))
+     (flycheck-display-error-messages (list err))
+     (should (equal (shut-up-current-output)
+                    "This is a Flycheck error. [spam]\n")))))
 
 
 ;;; Working with errors
@@ -3623,7 +3623,7 @@ of the file will be interrupted because there are too many #ifdef configurations
   (let ((flycheck-disabled-checkers '(c/c++-clang)))
     (flycheck-ert-should-syntax-check
      "language/c_c++/error.cpp" 'c++-mode
-     '(2 18 error "‘struct A’ has no member named ‘bar’"
+     '(2 18 error "'struct A' has no member named 'bar'"
          :checker c/c++-gcc))))
 
 (flycheck-ert-def-checker-test c/c++-gcc (c c++) fatal-error
@@ -3637,7 +3637,7 @@ of the file will be interrupted because there are too many #ifdef configurations
   (let ((flycheck-disabled-checkers '(c/c++-clang c/c++-cppcheck)))
     (flycheck-ert-should-syntax-check
      "language/c_c++/warning.c" 'c-mode
-     '(5 10 warning "unused variable ‘unused’" :checker c/c++-gcc)
+     '(5 10 warning "unused variable 'unused'" :checker c/c++-gcc)
      '(7 15 warning "comparison between signed and unsigned integer expressions"
          :checker c/c++-gcc)
      '(8 7 warning "#warning" :checker c/c++-gcc))))
